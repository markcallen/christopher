[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "christopher"
version = "0.1.0"
description = "Christopher - An AI agent framework"
authors = [
    {name = "Christopher Team"}
]
requires-python = ">=3.10"
dependencies = [
    "inquirer",
    "python-dotenv",
]

[tool.pytest.ini_options]
pythonpath = [
    "."
]
testpaths = ["tests"]
python_files = ["test_*.py"]
asyncio_mode = "auto"

# Updated coverage configuration
addopts = "--cov=cli --cov=core --cov=llm --cov=agents --cov=api --cov-report=term-missing --cov-report=html"

[tool.setuptools]
packages = ["cli", "core", "llm", "agents", "api"]

[tool.ruff]
target-version = "py310"
line-length = 88 # Or your preferred line length

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # Pyflakes
    "W",  # pycodestyle warnings
    "I",  # isort
    "N",  # pep8-naming
    "D",  # pydocstyle (optional, if you want docstring checks)
    "UP", # pyupgrade (for Python 3.10 specific upgrades)
    "T20", # warn about print statements
]
ignore = [
    # Add rules to ignore here, e.g., "E501" for line length if not using line-length
    "D203",
    "D213"
]

[tool.ruff.format]
quote-style = "double" # Or "single"
indent-style = "space"
line-ending = "auto"

[tool.coverage.run]
source = ["cli", "core", "llm", "agents", "api"]
branch = true
omit = [
    "tests/*",
    "setup.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "pass",
    "@abstractmethod",
]
show_missing = true
fail_under = 80
